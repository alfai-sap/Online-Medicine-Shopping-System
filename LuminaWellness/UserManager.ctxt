#BlueJ class context
comment0.target=UserManager
comment0.text=\r\n\ Manages\ the\ users\ (Admin\ and\ Customer)\ in\ the\ system.\r\n\ Handles\ user\ creation,\ authentication,\ and\ persistence.\r\n
comment1.params=
comment1.target=UserManager()
comment1.text=\r\n\ Initializes\ the\ UserManager\ and\ loads\ user\ data\ from\ a\ file.\r\n
comment10.params=
comment10.target=java.util.HashMap\ getUsers()
comment10.text=\r\n\ Gets\ the\ map\ of\ email\ to\ hashed\ passwords.\r\n\ \r\n\ @return\ A\ map\ of\ email\ to\ hashed\ passwords.\r\n
comment11.params=
comment11.target=java.util.HashMap\ getUserProfiles()
comment11.text=\r\n\ Gets\ the\ map\ of\ email\ to\ User\ objects.\r\n\ \r\n\ @return\ A\ map\ of\ email\ to\ User\ objects.\r\n
comment2.params=
comment2.target=UserManager\ getInstance()
comment2.text=\r\n\ Ensures\ only\ one\ instance\ of\ UserManager\ exists.\r\n\ \r\n\ @return\ The\ singleton\ instance\ of\ UserManager.\r\n
comment3.params=
comment3.target=void\ saveUsers()
comment3.text=\r\n\ Saves\ all\ users\ to\ the\ user\ file.\r\n
comment4.params=
comment4.target=void\ loadUsers()
comment4.text=\r\n\ Loads\ all\ users\ from\ the\ user\ file.\r\n
comment5.params=
comment5.target=void\ initializeDefaultAdmin()
comment5.text=\r\n\ Initializes\ a\ default\ admin\ if\ no\ users\ exist.\r\n
comment6.params=name\ email\ password\ isAdmin
comment6.target=boolean\ addUser(java.lang.String,\ java.lang.String,\ java.lang.String,\ boolean)
comment6.text=\r\n\ Adds\ a\ new\ user\ to\ the\ system.\r\n\ \r\n\ @param\ name\ \ \ \ \ \ The\ name\ of\ the\ user.\r\n\ @param\ email\ \ \ \ \ The\ email\ of\ the\ user.\r\n\ @param\ password\ \ The\ password\ of\ the\ user.\r\n\ @param\ isAdmin\ \ \ Whether\ the\ user\ is\ an\ admin.\r\n\ @return\ True\ if\ the\ user\ was\ successfully\ added,\ false\ if\ the\ email\ already\ exists.\r\n
comment7.params=email
comment7.target=boolean\ deleteUser(java.lang.String)
comment7.text=\r\n\ Deletes\ a\ user\ from\ the\ system.\r\n\ \r\n\ @param\ email\ The\ email\ of\ the\ user\ to\ delete.\r\n\ @return\ True\ if\ the\ user\ was\ successfully\ deleted,\ false\ if\ the\ user\ was\ not\ found.\r\n
comment8.params=email\ password
comment8.target=User\ validateUser(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Validates\ user\ credentials\ during\ login.\r\n\ \r\n\ @param\ email\ \ \ \ \ The\ email\ of\ the\ user.\r\n\ @param\ password\ \ The\ password\ of\ the\ user.\r\n\ @return\ The\ User\ object\ if\ credentials\ are\ correct,\ otherwise\ null.\r\n
comment9.params=
comment9.target=java.util.List\ getAllUsers()
comment9.text=\r\n\ Gets\ a\ list\ of\ all\ users.\r\n\ \r\n\ @return\ A\ list\ of\ all\ User\ objects.\r\n
numComments=12
